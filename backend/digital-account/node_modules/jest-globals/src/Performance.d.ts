/// <reference types="jest" />
export declare const createMockPerformance: () => {
    clearMarks: jest.Mock<void, [markName?: string | undefined]>;
    clearMeasures: jest.Mock<void, [measureName?: string | undefined]>;
    clearResourceTimings: jest.Mock<void, []>;
    getEntries: jest.Mock<PerformanceEntryList, []>;
    getEntriesByName: jest.Mock<PerformanceEntryList, [name: string, type?: string | undefined]>;
    getEntriesByType: jest.Mock<PerformanceEntryList, [type: string]>;
    mark: jest.Mock<PerformanceMark, [markName: string, markOptions?: PerformanceMarkOptions | undefined]>;
    measure: jest.Mock<PerformanceMeasure, [measureName: string, startOrMeasureOptions?: string | PerformanceMeasureOptions | undefined, endMark?: string | undefined]>;
    now: jest.Mock<number, []>;
    setResourceTimingBufferSize: jest.Mock<void, [maxSize: number]>;
    toJSON: jest.Mock<any, []>;
};
export declare type MockPerformance = ReturnType<typeof createMockPerformance>;
